{"version":3,"sources":["E:/cygwin/confckurator/confckurator/src/$_gendir lazy","E:/cygwin/confckurator/confckurator/src/api/api/PacksApi.ts","E:/cygwin/confckurator/confckurator/src/api/api/TemplatesApi.ts","E:/cygwin/confckurator/confckurator/src/api/configuration.ts","E:/cygwin/confckurator/confckurator/src/api/variables.ts","E:/cygwin/confckurator/confckurator/src/app/app.component.css","E:/cygwin/confckurator/confckurator/src/app/app.component.html","E:/cygwin/confckurator/confckurator/src/app/app.component.ts","E:/cygwin/confckurator/confckurator/src/app/app.module.ts","E:/cygwin/confckurator/confckurator/src/app/packs/packs.component.css","E:/cygwin/confckurator/confckurator/src/app/packs/packs.component.html","E:/cygwin/confckurator/confckurator/src/app/packs/packs.component.ts","E:/cygwin/confckurator/confckurator/src/app/templates/templates.component.css","E:/cygwin/confckurator/confckurator/src/app/templates/templates.component.html","E:/cygwin/confckurator/confckurator/src/app/templates/templates.component.ts","E:/cygwin/confckurator/confckurator/src/environments/environment.ts","E:/cygwin/confckurator/confckurator/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/cygwin/confckurator/confckurator/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","/**\n * Confckurator\n * Confckurator Client/Server API\n *\n * OpenAPI spec version: 1.0.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { Http, Headers, URLSearchParams }                    from '@angular/http';\nimport { RequestMethod, RequestOptions, RequestOptionsArgs } from '@angular/http';\nimport { Response, ResponseContentType }                     from '@angular/http';\n\nimport { Observable }                                        from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\n\nimport * as models                                           from '../model/models';\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n@Injectable()\nexport class PacksApi {\n\n    protected basePath = 'https://localhost/api';\n    public defaultHeaders: Headers = new Headers();\n    public configuration: Configuration = new Configuration();\n\n    constructor(protected http: Http, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n        }\n    }\n\n    /**\n     * \n     * @summary Attach a template to a pack\n     * @param packId The pack ID.\n     * @param templateId The template ID.\n     */\n    public attachPackTemplate(packId: number, templateId: number, extraHttpRequestParams?: any): Observable<any> {\n        return this.attachPackTemplateWithHttpInfo(packId, templateId, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @summary Create a new pack\n     * @param postPacksBody Pack creation properties.\n     */\n    public createPack(postPacksBody?: models.NewPack, extraHttpRequestParams?: any): Observable<models.IdResponse> {\n        return this.createPackWithHttpInfo(postPacksBody, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @summary Delete a pack\n     * @param packId The pack ID.\n     */\n    public deletePack(packId: number, extraHttpRequestParams?: any): Observable<any> {\n        return this.deletePackWithHttpInfo(packId, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @summary Delete a variable's value\n     * @param packId The pack ID.\n     * @param variableId The variable ID.\n     * @param setVariableValue Variable value.\n     */\n    public deletePackValue(packId: number, variableId: number, setVariableValue?: models.DeleteVariableValue, extraHttpRequestParams?: any): Observable<any> {\n        return this.deletePackValueWithHttpInfo(packId, variableId, setVariableValue, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @summary Remove a template from a pack\n     * @param packId The pack ID.\n     * @param templateId The template ID.\n     */\n    public detachPackTemplate(packId: number, templateId: number, extraHttpRequestParams?: any): Observable<any> {\n        return this.detachPackTemplateWithHttpInfo(packId, templateId, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @summary Get details about a pack\n     * @param packId The pack ID.\n     */\n    public getPack(packId: number, extraHttpRequestParams?: any): Observable<models.Pack> {\n        return this.getPackWithHttpInfo(packId, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @summary Get an instantiated pack\n     * @param packId The pack ID.\n     * @param environmentId The environment ID.\n     */\n    public getPackInstance(packId: number, environmentId: number, extraHttpRequestParams?: any): Observable<Array<models.TemplateInstance>> {\n        return this.getPackInstanceWithHttpInfo(packId, environmentId, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @summary List all packs\n     */\n    public getPacks(extraHttpRequestParams?: any): Observable<Array<models.Pack>> {\n        return this.getPacksWithHttpInfo(extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @summary Set a variable's value\n     * @param packId The pack ID.\n     * @param variableId The variable ID.\n     * @param setVariableValue Variable value.\n     */\n    public setPackValue(packId: number, variableId: number, setVariableValue?: models.VariableValueUpdate, extraHttpRequestParams?: any): Observable<any> {\n        return this.setPackValueWithHttpInfo(packId, variableId, setVariableValue, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n\n    /**\n     * Attach a template to a pack\n     * \n     * @param packId The pack ID.\n     * @param templateId The template ID.\n     */\n    public attachPackTemplateWithHttpInfo(packId: number, templateId: number, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/pack/${packId}/template/${templateId}'\n                    .replace('${' + 'packId' + '}', String(packId))\n                    .replace('${' + 'templateId' + '}', String(templateId));\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'packId' is not null or undefined\n        if (packId === null || packId === undefined) {\n            throw new Error('Required parameter packId was null or undefined when calling attachPackTemplate.');\n        }\n        // verify required parameter 'templateId' is not null or undefined\n        if (templateId === null || templateId === undefined) {\n            throw new Error('Required parameter templateId was null or undefined when calling attachPackTemplate.');\n        }\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Post,\n            headers: headers,\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * Create a new pack\n     * \n     * @param postPacksBody Pack creation properties.\n     */\n    public createPackWithHttpInfo(postPacksBody?: models.NewPack, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/pack/';\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        headers.set('Content-Type', 'application/json');\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Put,\n            headers: headers,\n            body: postPacksBody == null ? '' : JSON.stringify(postPacksBody), // https://github.com/angular/angular/issues/10612\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * Delete a pack\n     * \n     * @param packId The pack ID.\n     */\n    public deletePackWithHttpInfo(packId: number, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/pack/${packId}'\n                    .replace('${' + 'packId' + '}', String(packId));\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'packId' is not null or undefined\n        if (packId === null || packId === undefined) {\n            throw new Error('Required parameter packId was null or undefined when calling deletePack.');\n        }\n        // to determine the Content-Type header\n        let consumes: string[] = [\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Delete,\n            headers: headers,\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * Delete a variable&#39;s value\n     * \n     * @param packId The pack ID.\n     * @param variableId The variable ID.\n     * @param setVariableValue Variable value.\n     */\n    public deletePackValueWithHttpInfo(packId: number, variableId: number, setVariableValue?: models.DeleteVariableValue, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/pack/${packId}/variable/${variableId}'\n                    .replace('${' + 'packId' + '}', String(packId))\n                    .replace('${' + 'variableId' + '}', String(variableId));\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'packId' is not null or undefined\n        if (packId === null || packId === undefined) {\n            throw new Error('Required parameter packId was null or undefined when calling deletePackValue.');\n        }\n        // verify required parameter 'variableId' is not null or undefined\n        if (variableId === null || variableId === undefined) {\n            throw new Error('Required parameter variableId was null or undefined when calling deletePackValue.');\n        }\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        headers.set('Content-Type', 'application/json');\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Delete,\n            headers: headers,\n            body: setVariableValue == null ? '' : JSON.stringify(setVariableValue), // https://github.com/angular/angular/issues/10612\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * Remove a template from a pack\n     * \n     * @param packId The pack ID.\n     * @param templateId The template ID.\n     */\n    public detachPackTemplateWithHttpInfo(packId: number, templateId: number, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/pack/${packId}/template/${templateId}'\n                    .replace('${' + 'packId' + '}', String(packId))\n                    .replace('${' + 'templateId' + '}', String(templateId));\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'packId' is not null or undefined\n        if (packId === null || packId === undefined) {\n            throw new Error('Required parameter packId was null or undefined when calling detachPackTemplate.');\n        }\n        // verify required parameter 'templateId' is not null or undefined\n        if (templateId === null || templateId === undefined) {\n            throw new Error('Required parameter templateId was null or undefined when calling detachPackTemplate.');\n        }\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Delete,\n            headers: headers,\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * Get details about a pack\n     * \n     * @param packId The pack ID.\n     */\n    public getPackWithHttpInfo(packId: number, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/pack/${packId}'\n                    .replace('${' + 'packId' + '}', String(packId));\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'packId' is not null or undefined\n        if (packId === null || packId === undefined) {\n            throw new Error('Required parameter packId was null or undefined when calling getPack.');\n        }\n        // to determine the Content-Type header\n        let consumes: string[] = [\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Get,\n            headers: headers,\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * Get an instantiated pack\n     * \n     * @param packId The pack ID.\n     * @param environmentId The environment ID.\n     */\n    public getPackInstanceWithHttpInfo(packId: number, environmentId: number, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/instance/${packId}/${environmentId}'\n                    .replace('${' + 'packId' + '}', String(packId))\n                    .replace('${' + 'environmentId' + '}', String(environmentId));\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'packId' is not null or undefined\n        if (packId === null || packId === undefined) {\n            throw new Error('Required parameter packId was null or undefined when calling getPackInstance.');\n        }\n        // verify required parameter 'environmentId' is not null or undefined\n        if (environmentId === null || environmentId === undefined) {\n            throw new Error('Required parameter environmentId was null or undefined when calling getPackInstance.');\n        }\n        // to determine the Content-Type header\n        let consumes: string[] = [\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Get,\n            headers: headers,\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * List all packs\n     * \n     */\n    public getPacksWithHttpInfo(extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/pack/';\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // to determine the Content-Type header\n        let consumes: string[] = [\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Get,\n            headers: headers,\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * Set a variable&#39;s value\n     * \n     * @param packId The pack ID.\n     * @param variableId The variable ID.\n     * @param setVariableValue Variable value.\n     */\n    public setPackValueWithHttpInfo(packId: number, variableId: number, setVariableValue?: models.VariableValueUpdate, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/pack/${packId}/variable/${variableId}'\n                    .replace('${' + 'packId' + '}', String(packId))\n                    .replace('${' + 'variableId' + '}', String(variableId));\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'packId' is not null or undefined\n        if (packId === null || packId === undefined) {\n            throw new Error('Required parameter packId was null or undefined when calling setPackValue.');\n        }\n        // verify required parameter 'variableId' is not null or undefined\n        if (variableId === null || variableId === undefined) {\n            throw new Error('Required parameter variableId was null or undefined when calling setPackValue.');\n        }\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        headers.set('Content-Type', 'application/json');\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Patch,\n            headers: headers,\n            body: setVariableValue == null ? '' : JSON.stringify(setVariableValue), // https://github.com/angular/angular/issues/10612\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// E:/cygwin/confckurator/confckurator/src/api/api/PacksApi.ts","/**\n * Confckurator\n * Confckurator Client/Server API\n *\n * OpenAPI spec version: 1.0.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { Http, Headers, URLSearchParams }                    from '@angular/http';\nimport { RequestMethod, RequestOptions, RequestOptionsArgs } from '@angular/http';\nimport { Response, ResponseContentType }                     from '@angular/http';\n\nimport { Observable }                                        from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\n\nimport * as models                                           from '../model/models';\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n@Injectable()\nexport class TemplatesApi {\n\n    protected basePath = 'https://localhost/api';\n    public defaultHeaders: Headers = new Headers();\n    public configuration: Configuration = new Configuration();\n\n    constructor(protected http: Http, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n        }\n    }\n\n    /**\n     * \n     * @summary Create a new template\n     * @param postTemplatesBody Template creation properties.\n     */\n    public createTemplate(postTemplatesBody?: models.NewTemplate, extraHttpRequestParams?: any): Observable<models.IdResponse> {\n        return this.createTemplateWithHttpInfo(postTemplatesBody, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @summary Create a new variable\n     * @param templateId The template ID.\n     * @param postTemplateVariablesBody Variable creation properties.\n     */\n    public createTemplateVariable(templateId: number, postTemplateVariablesBody?: models.NewVariable, extraHttpRequestParams?: any): Observable<models.IdResponse> {\n        return this.createTemplateVariableWithHttpInfo(templateId, postTemplateVariablesBody, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @summary Delete a template\n     * @param templateId The template ID.\n     */\n    public deleteTemplate(templateId: number, extraHttpRequestParams?: any): Observable<any> {\n        return this.deleteTemplateWithHttpInfo(templateId, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @summary Delete a variable\n     * @param templateId The template ID.\n     * @param variableId The variable ID.\n     */\n    public deleteTemplateVariable(templateId: number, variableId: number, extraHttpRequestParams?: any): Observable<any> {\n        return this.deleteTemplateVariableWithHttpInfo(templateId, variableId, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @summary Get details about a template\n     * @param templateId The template ID.\n     * @param withText Also deliver the template text when set to \\&quot;true\\&quot;; defaults to \\&quot;false\\&quot;.\n     */\n    public getTemplate(templateId: number, withText?: boolean, extraHttpRequestParams?: any): Observable<models.Template> {\n        return this.getTemplateWithHttpInfo(templateId, withText, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @summary List all variables of a template\n     * @param templateId The template ID.\n     */\n    public getTemplateVariables(templateId: number, extraHttpRequestParams?: any): Observable<models.Variable> {\n        return this.getTemplateVariablesWithHttpInfo(templateId, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @summary List all templates\n     */\n    public getTemplates(extraHttpRequestParams?: any): Observable<Array<models.Template>> {\n        return this.getTemplatesWithHttpInfo(extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @summary Update a template's text\n     * @param templateId The template ID.\n     * @param updateTemplateBody Template update properties.\n     */\n    public updateTemplate(templateId: number, updateTemplateBody?: models.UpdateTemplate, extraHttpRequestParams?: any): Observable<models.IdResponse> {\n        return this.updateTemplateWithHttpInfo(templateId, updateTemplateBody, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @summary Update a variable's description\n     * @param templateId The template ID.\n     * @param variableId The variable ID.\n     * @param updateTemplateVariableBody Variable creation properties.\n     */\n    public updateTemplateVariable(templateId: number, variableId: number, updateTemplateVariableBody?: models.UpdateVariable, extraHttpRequestParams?: any): Observable<models.IdResponse> {\n        return this.updateTemplateVariableWithHttpInfo(templateId, variableId, updateTemplateVariableBody, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n\n    /**\n     * Create a new template\n     * \n     * @param postTemplatesBody Template creation properties.\n     */\n    public createTemplateWithHttpInfo(postTemplatesBody?: models.NewTemplate, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/template/';\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        headers.set('Content-Type', 'application/json');\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Put,\n            headers: headers,\n            body: postTemplatesBody == null ? '' : JSON.stringify(postTemplatesBody), // https://github.com/angular/angular/issues/10612\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * Create a new variable\n     * \n     * @param templateId The template ID.\n     * @param postTemplateVariablesBody Variable creation properties.\n     */\n    public createTemplateVariableWithHttpInfo(templateId: number, postTemplateVariablesBody?: models.NewVariable, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/template/${templateId}/variable/'\n                    .replace('${' + 'templateId' + '}', String(templateId));\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'templateId' is not null or undefined\n        if (templateId === null || templateId === undefined) {\n            throw new Error('Required parameter templateId was null or undefined when calling createTemplateVariable.');\n        }\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        headers.set('Content-Type', 'application/json');\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Put,\n            headers: headers,\n            body: postTemplateVariablesBody == null ? '' : JSON.stringify(postTemplateVariablesBody), // https://github.com/angular/angular/issues/10612\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * Delete a template\n     * \n     * @param templateId The template ID.\n     */\n    public deleteTemplateWithHttpInfo(templateId: number, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/template/${templateId}'\n                    .replace('${' + 'templateId' + '}', String(templateId));\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'templateId' is not null or undefined\n        if (templateId === null || templateId === undefined) {\n            throw new Error('Required parameter templateId was null or undefined when calling deleteTemplate.');\n        }\n        // to determine the Content-Type header\n        let consumes: string[] = [\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Delete,\n            headers: headers,\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * Delete a variable\n     * \n     * @param templateId The template ID.\n     * @param variableId The variable ID.\n     */\n    public deleteTemplateVariableWithHttpInfo(templateId: number, variableId: number, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/template/${templateId}/variable/${variableId}'\n                    .replace('${' + 'templateId' + '}', String(templateId))\n                    .replace('${' + 'variableId' + '}', String(variableId));\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'templateId' is not null or undefined\n        if (templateId === null || templateId === undefined) {\n            throw new Error('Required parameter templateId was null or undefined when calling deleteTemplateVariable.');\n        }\n        // verify required parameter 'variableId' is not null or undefined\n        if (variableId === null || variableId === undefined) {\n            throw new Error('Required parameter variableId was null or undefined when calling deleteTemplateVariable.');\n        }\n        // to determine the Content-Type header\n        let consumes: string[] = [\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Delete,\n            headers: headers,\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * Get details about a template\n     * \n     * @param templateId The template ID.\n     * @param withText Also deliver the template text when set to \\&quot;true\\&quot;; defaults to \\&quot;false\\&quot;.\n     */\n    public getTemplateWithHttpInfo(templateId: number, withText?: boolean, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/template/${templateId}'\n                    .replace('${' + 'templateId' + '}', String(templateId));\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'templateId' is not null or undefined\n        if (templateId === null || templateId === undefined) {\n            throw new Error('Required parameter templateId was null or undefined when calling getTemplate.');\n        }\n        if (withText !== undefined) {\n            queryParameters.set('with_text', <any>withText);\n        }\n\n        // to determine the Content-Type header\n        let consumes: string[] = [\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Get,\n            headers: headers,\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * List all variables of a template\n     * \n     * @param templateId The template ID.\n     */\n    public getTemplateVariablesWithHttpInfo(templateId: number, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/template/${templateId}/variable/'\n                    .replace('${' + 'templateId' + '}', String(templateId));\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'templateId' is not null or undefined\n        if (templateId === null || templateId === undefined) {\n            throw new Error('Required parameter templateId was null or undefined when calling getTemplateVariables.');\n        }\n        // to determine the Content-Type header\n        let consumes: string[] = [\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Get,\n            headers: headers,\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * List all templates\n     * \n     */\n    public getTemplatesWithHttpInfo(extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/template/';\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // to determine the Content-Type header\n        let consumes: string[] = [\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Get,\n            headers: headers,\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * Update a template&#39;s text\n     * \n     * @param templateId The template ID.\n     * @param updateTemplateBody Template update properties.\n     */\n    public updateTemplateWithHttpInfo(templateId: number, updateTemplateBody?: models.UpdateTemplate, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/template/${templateId}'\n                    .replace('${' + 'templateId' + '}', String(templateId));\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'templateId' is not null or undefined\n        if (templateId === null || templateId === undefined) {\n            throw new Error('Required parameter templateId was null or undefined when calling updateTemplate.');\n        }\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        headers.set('Content-Type', 'application/json');\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Patch,\n            headers: headers,\n            body: updateTemplateBody == null ? '' : JSON.stringify(updateTemplateBody), // https://github.com/angular/angular/issues/10612\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * Update a variable&#39;s description\n     * \n     * @param templateId The template ID.\n     * @param variableId The variable ID.\n     * @param updateTemplateVariableBody Variable creation properties.\n     */\n    public updateTemplateVariableWithHttpInfo(templateId: number, variableId: number, updateTemplateVariableBody?: models.UpdateVariable, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/template/${templateId}/variable/${variableId}'\n                    .replace('${' + 'templateId' + '}', String(templateId))\n                    .replace('${' + 'variableId' + '}', String(variableId));\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'templateId' is not null or undefined\n        if (templateId === null || templateId === undefined) {\n            throw new Error('Required parameter templateId was null or undefined when calling updateTemplateVariable.');\n        }\n        // verify required parameter 'variableId' is not null or undefined\n        if (variableId === null || variableId === undefined) {\n            throw new Error('Required parameter variableId was null or undefined when calling updateTemplateVariable.');\n        }\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        headers.set('Content-Type', 'application/json');\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Patch,\n            headers: headers,\n            body: updateTemplateVariableBody == null ? '' : JSON.stringify(updateTemplateVariableBody), // https://github.com/angular/angular/issues/10612\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// E:/cygwin/confckurator/confckurator/src/api/api/TemplatesApi.ts","export class Configuration {\n    apiKey: string;\n    username: string;\n    password: string;\n    accessToken: string | (() => string);\n    withCredentials: boolean;\n}\n\n\n// WEBPACK FOOTER //\n// E:/cygwin/confckurator/confckurator/src/api/configuration.ts","import { OpaqueToken } from '@angular/core';\n\nexport const BASE_PATH = new OpaqueToken('basePath');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n\n\n\n// WEBPACK FOOTER //\n// E:/cygwin/confckurator/confckurator/src/api/variables.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/cygwin/confckurator/confckurator/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n  <header class=\\\"page-header\\\">\\n    <h1>Confckurator</h1>\\n    <a class=\\\"btn btn-primary\\\" href=\\\"../swagger/index.html\\\">API</a>\\n  </header>\\n  <article>\\n    <ngb-tabset>\\n      <ngb-tab title=\\\"Packs\\\">\\n        <ng-template ngbTabContent>\\n          <app-packs></app-packs>\\n        </ng-template>\\n      </ngb-tab>\\n      <ngb-tab title=\\\"Templates\\\">\\n        <ng-template ngbTabContent>\\n          <app-templates></app-templates>\\n        </ng-template>\\n      </ngb-tab>\\n    </ngb-tabset>\\n  </article>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/cygwin/confckurator/confckurator/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n}\n\n\n\n// WEBPACK FOOTER //\n// E:/cygwin/confckurator/confckurator/src/app/app.component.ts","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppComponent} from './app.component';\nimport {PacksComponent} from './packs/packs.component';\nimport {TemplatesComponent} from './templates/templates.component';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {HttpModule} from '@angular/http';\nimport {BASE_PATH} from '../api/variables';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {CodemirrorModule} from 'ng2-codemirror';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PacksComponent,\n    TemplatesComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    NgbModule.forRoot(),\n    ReactiveFormsModule,\n    CodemirrorModule,\n    FormsModule\n  ],\n  providers: [{provide: BASE_PATH, useValue: '/api'}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// E:/cygwin/confckurator/confckurator/src/app/app.module.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/cygwin/confckurator/confckurator/src/app/packs/packs.component.css\n// module id = ../../../../../src/app/packs/packs.component.css\n// module chunks = main","module.exports = \"<div class=\\\"list-group\\\">\\n  <div class=\\\"list-group-item\\\" *ngFor=\\\"let pack of packs\\\">\\n    <h4 class=\\\"list-group-item-heading\\\">\\n      [#{{ pack.id }}] {{ pack.name }}\\n    </h4>\\n    <div class=\\\"list-group-item-text\\\">\\n      Values:\\n      <ul>\\n        <li *ngFor=\\\"let value of pack.values\\\">\\n          variable_id={{ value.variable_id }},\\n          environment_id={{ value.environment_id }},\\n          pack_id={{ value.pack_id }}\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/cygwin/confckurator/confckurator/src/app/packs/packs.component.html\n// module id = ../../../../../src/app/packs/packs.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\nimport {PacksApi} from \"../../api/api/PacksApi\";\nimport {Pack} from \"../../api/model/Pack\";\n\n@Component({\n  selector: 'app-packs',\n  templateUrl: './packs.component.html',\n  styleUrls: ['./packs.component.css'],\n  providers: [PacksApi]\n})\nexport class PacksComponent implements OnInit {\n  packs: Pack[];\n\n  constructor(private api: PacksApi) {\n  }\n\n  ngOnInit() {\n    this.api.getPacks().subscribe(d => {\n      console.debug(d);\n      this.packs = d;\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// E:/cygwin/confckurator/confckurator/src/app/packs/packs.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/cygwin/confckurator/confckurator/src/app/templates/templates.component.css\n// module id = ../../../../../src/app/templates/templates.component.css\n// module chunks = main","module.exports = \"<ngb-accordion #acc=\\\"ngbAccordion\\\">\\n  <ngb-panel *ngFor=\\\"let templateInfo of infos\\\">\\n    <ng-template ngbPanelTitle>\\n      [#{{ templateInfo.template.id }}] {{ templateInfo.template.name }}\\n    </ng-template>\\n    <ng-template ngbPanelContent>\\n      <h4>Variables</h4>\\n      <div [formGroup]=\\\"templateInfo.variablesForm\\\">\\n        <div formArrayName=\\\"variables\\\">\\n          <div class=\\\"row\\\" *ngFor=\\\"let variable of templateInfo.variablesList.controls; let i = index\\\">\\n            <div class=\\\"col-4 form-inline\\\" [formGroupName]=\\\"i\\\">\\n              <div (click)=\\\"templateInfo.removeVariable(i)\\\" class=\\\"btn btn-default input-group-addon\\\">\\n                <span class=\\\"fa fa-trash\\\"></span>\\n              </div>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Name\\\" formControlName=\\\"name\\\" title=\\\"Name\\\"\\n                     [ngClass]=\\\"{'is-invalid': variable.controls.name.invalid}\\\">\\n            </div>\\n            <div class=\\\"col\\\" [formGroupName]=\\\"i\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Description\\\" formControlName=\\\"description\\\"\\n                     title=\\\"Description\\\"\\n                     [ngClass]=\\\"{'is-invalid': variable.controls.description.invalid}\\\">\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <a (click)=\\\"templateInfo.addVariable()\\\" class=\\\"btn btn-primary\\\">\\n        <span class=\\\"fa fa-plus-square\\\"></span> Add Variable\\n      </a>\\n\\n      <h4>Template</h4>\\n      <codemirror [config]=\\\"{lineNumbers:true, mode:'jinja2', matchBrackets:true, highlightSelectionMatches:true}\\\" [(ngModel)]=\\\"templateInfo.code\\\"></codemirror>\\n\\n      <a (click)=\\\"templateInfo.save()\\\" class=\\\"btn btn-success\\\">\\n        <span class=\\\"fa fa-save\\\"></span> Save\\n      </a>\\n    </ng-template>\\n  </ngb-panel>\\n</ngb-accordion>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/cygwin/confckurator/confckurator/src/app/templates/templates.component.html\n// module id = ../../../../../src/app/templates/templates.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\nimport {TemplatesApi} from '../../api/api/TemplatesApi';\nimport {Template} from '../../api/model/Template';\nimport {FormArray, FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Variable} from '../../api/model/Variable';\nimport 'codemirror/mode/jinja2/jinja2';\nimport 'codemirror/mode/dockerfile/dockerfile';\nimport 'codemirror/addon/dialog/dialog';\nimport 'codemirror/addon/search/match-highlighter';\nimport 'codemirror/addon/search/searchcursor';\nimport 'codemirror/addon/search/search';\nimport 'codemirror/addon/edit/matchbrackets';\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/observable/forkJoin';\nimport {IdResponse} from '../../api/model/IdResponse';\n\nclass TemplateInfo {\n  public variablesForm: FormGroup;\n  public variablesList: FormArray;\n  public code = '';\n\n  private variablesToDelete: number[] = [];\n\n  constructor(private api: TemplatesApi, private formBuilder: FormBuilder, private template: Template) {\n    this.reload();\n  }\n\n  reload(): void {\n    if (!this.variablesList) {\n      this.variablesList = this.formBuilder.array([]);\n      this.variablesForm = this.formBuilder.group({\n        variables: this.variablesList\n      });\n    }\n\n    this.api.getTemplate(this.template.id, true).subscribe(t => {\n      this.template = t;\n      this.updateDisplay();\n    });\n  }\n\n  createVariable(variable: Variable = null): FormGroup {\n    return this.formBuilder.group({\n      name: [\n        {value: !variable ? '' : variable.name, disabled: variable != null},\n        Validators.pattern(/^[a-zA-Z_][a-zA-Z0-9_]*$/)\n      ],\n      description: [!variable ? '' : variable.description],\n      id: [!variable ? -1 : variable.id]\n    });\n  }\n\n  private updateDisplay(): void {\n    while (this.variablesList.length > 0) {\n      this.variablesList.removeAt(0);\n    }\n\n    this.template.variables.forEach(v => {\n      this.variablesList.push(this.createVariable(v));\n    });\n\n    this.code = this.template.text;\n  }\n\n  public save(): void {\n    let tplRequest: Observable<IdResponse>;\n    if (this.template.id < 0) {\n      tplRequest = this.api.createTemplate({name: this.template.name, text: this.code});\n    } else {\n      tplRequest = this.api.updateTemplate(this.template.id, {text: this.code});\n    }\n\n    tplRequest.subscribe(tpl => {\n      this.template.id = tpl.id;\n      const requests = this.saveVariables();\n      if (requests.length > 0) {\n        Observable.forkJoin(requests).subscribe(x => this.reload());\n      } else {\n        this.reload();\n      }\n    });\n  }\n\n  private saveVariables(): Observable<any>[] {\n    let result: Observable<any>[] = this.variablesList.controls.map(vc => {\n      const id: number = vc.get('id').value;\n      const name: string = vc.get('name').value;\n      const description: string = vc.get('description').value;\n\n      if (id < 0) {\n        return this.api.createTemplateVariable(this.template.id, {\n          name: name,\n          description: description\n        });\n      } else {\n        return this.api.updateTemplateVariable(this.template.id, id, {\n          description: description\n        });\n      }\n    });\n\n    result.push(\n      ...this.variablesToDelete.map(id => this.api.deleteTemplateVariable(this.template.id, id))\n    );\n\n    this.variablesToDelete = [];\n\n    return result;\n  }\n\n  public addVariable(): void {\n    this.variablesList.push(this.createVariable());\n  }\n\n  public removeVariable(idx: number): void {\n    this.variablesToDelete.push(this.variablesList.controls[idx].get('id').value);\n    this.variablesList.removeAt(idx);\n  }\n}\n\n@Component({\n  selector: 'app-templates',\n  templateUrl: './templates.component.html',\n  styleUrls: [\n    './templates.component.css'\n  ],\n  providers: [FormBuilder, TemplatesApi]\n})\nexport class TemplatesComponent implements OnInit {\n  public infos: TemplateInfo[] = [];\n\n  constructor(private formBuilder: FormBuilder, private api: TemplatesApi) {\n  }\n\n  ngOnInit() {\n    this.api.getTemplates().subscribe(data => {\n      data.forEach(v => this.infos.push(new TemplateInfo(this.api, this.formBuilder, v)));\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// E:/cygwin/confckurator/confckurator/src/app/templates/templates.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// E:/cygwin/confckurator/confckurator/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// E:/cygwin/confckurator/confckurator/src/main.ts"],"sourceRoot":"webpack:///"}